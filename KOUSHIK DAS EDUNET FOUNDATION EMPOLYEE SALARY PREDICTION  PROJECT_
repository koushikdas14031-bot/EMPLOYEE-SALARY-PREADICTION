{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyNpIRnE+S9ny7dDnrvXok5s"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":1,"metadata":{"id":"60BTWDDNukpd","executionInfo":{"status":"ok","timestamp":1752825004064,"user_tz":-330,"elapsed":4400,"user":{"displayName":"KOUSHIK Das","userId":"09056902619545898823"}},"colab":{"base_uri":"https://localhost:8080/","height":756},"outputId":"a34efbb1-c5cf-458d-ef67-c7fe33b5ce0e"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["       age     workclass  fnlwgt     education  educational-num  \\\n","0       25       Private  226802          11th                7   \n","1       38       Private   89814       HS-grad                9   \n","2       28     Local-gov  336951    Assoc-acdm               12   \n","3       44       Private  160323  Some-college               10   \n","4       18             ?  103497  Some-college               10   \n","...    ...           ...     ...           ...              ...   \n","48837   27       Private  257302    Assoc-acdm               12   \n","48838   40       Private  154374       HS-grad                9   \n","48839   58       Private  151910       HS-grad                9   \n","48840   22       Private  201490       HS-grad                9   \n","48841   52  Self-emp-inc  287927       HS-grad                9   \n","\n","           marital-status         occupation relationship   race  gender  \\\n","0           Never-married  Machine-op-inspct    Own-child  Black    Male   \n","1      Married-civ-spouse    Farming-fishing      Husband  White    Male   \n","2      Married-civ-spouse    Protective-serv      Husband  White    Male   \n","3      Married-civ-spouse  Machine-op-inspct      Husband  Black    Male   \n","4           Never-married                  ?    Own-child  White  Female   \n","...                   ...                ...          ...    ...     ...   \n","48837  Married-civ-spouse       Tech-support         Wife  White  Female   \n","48838  Married-civ-spouse  Machine-op-inspct      Husband  White    Male   \n","48839             Widowed       Adm-clerical    Unmarried  White  Female   \n","48840       Never-married       Adm-clerical    Own-child  White    Male   \n","48841  Married-civ-spouse    Exec-managerial         Wife  White  Female   \n","\n","       capital-gain  capital-loss  hours-per-week native-country income  \n","0                 0             0              40  United-States  <=50K  \n","1                 0             0              50  United-States  <=50K  \n","2                 0             0              40  United-States   >50K  \n","3              7688             0              40  United-States   >50K  \n","4                 0             0              30  United-States  <=50K  \n","...             ...           ...             ...            ...    ...  \n","48837             0             0              38  United-States  <=50K  \n","48838             0             0              40  United-States   >50K  \n","48839             0             0              40  United-States  <=50K  \n","48840             0             0              20  United-States  <=50K  \n","48841         15024             0              40  United-States   >50K  \n","\n","[48842 rows x 15 columns]"],"text/html":["\n","  <div id=\"df-84ba0a1b-0165-4f83-bc24-fd8d671ca1e2\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>age</th>\n","      <th>workclass</th>\n","      <th>fnlwgt</th>\n","      <th>education</th>\n","      <th>educational-num</th>\n","      <th>marital-status</th>\n","      <th>occupation</th>\n","      <th>relationship</th>\n","      <th>race</th>\n","      <th>gender</th>\n","      <th>capital-gain</th>\n","      <th>capital-loss</th>\n","      <th>hours-per-week</th>\n","      <th>native-country</th>\n","      <th>income</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>25</td>\n","      <td>Private</td>\n","      <td>226802</td>\n","      <td>11th</td>\n","      <td>7</td>\n","      <td>Never-married</td>\n","      <td>Machine-op-inspct</td>\n","      <td>Own-child</td>\n","      <td>Black</td>\n","      <td>Male</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>40</td>\n","      <td>United-States</td>\n","      <td>&lt;=50K</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>38</td>\n","      <td>Private</td>\n","      <td>89814</td>\n","      <td>HS-grad</td>\n","      <td>9</td>\n","      <td>Married-civ-spouse</td>\n","      <td>Farming-fishing</td>\n","      <td>Husband</td>\n","      <td>White</td>\n","      <td>Male</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>50</td>\n","      <td>United-States</td>\n","      <td>&lt;=50K</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>28</td>\n","      <td>Local-gov</td>\n","      <td>336951</td>\n","      <td>Assoc-acdm</td>\n","      <td>12</td>\n","      <td>Married-civ-spouse</td>\n","      <td>Protective-serv</td>\n","      <td>Husband</td>\n","      <td>White</td>\n","      <td>Male</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>40</td>\n","      <td>United-States</td>\n","      <td>&gt;50K</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>44</td>\n","      <td>Private</td>\n","      <td>160323</td>\n","      <td>Some-college</td>\n","      <td>10</td>\n","      <td>Married-civ-spouse</td>\n","      <td>Machine-op-inspct</td>\n","      <td>Husband</td>\n","      <td>Black</td>\n","      <td>Male</td>\n","      <td>7688</td>\n","      <td>0</td>\n","      <td>40</td>\n","      <td>United-States</td>\n","      <td>&gt;50K</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>18</td>\n","      <td>?</td>\n","      <td>103497</td>\n","      <td>Some-college</td>\n","      <td>10</td>\n","      <td>Never-married</td>\n","      <td>?</td>\n","      <td>Own-child</td>\n","      <td>White</td>\n","      <td>Female</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>30</td>\n","      <td>United-States</td>\n","      <td>&lt;=50K</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>48837</th>\n","      <td>27</td>\n","      <td>Private</td>\n","      <td>257302</td>\n","      <td>Assoc-acdm</td>\n","      <td>12</td>\n","      <td>Married-civ-spouse</td>\n","      <td>Tech-support</td>\n","      <td>Wife</td>\n","      <td>White</td>\n","      <td>Female</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>38</td>\n","      <td>United-States</td>\n","      <td>&lt;=50K</td>\n","    </tr>\n","    <tr>\n","      <th>48838</th>\n","      <td>40</td>\n","      <td>Private</td>\n","      <td>154374</td>\n","      <td>HS-grad</td>\n","      <td>9</td>\n","      <td>Married-civ-spouse</td>\n","      <td>Machine-op-inspct</td>\n","      <td>Husband</td>\n","      <td>White</td>\n","      <td>Male</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>40</td>\n","      <td>United-States</td>\n","      <td>&gt;50K</td>\n","    </tr>\n","    <tr>\n","      <th>48839</th>\n","      <td>58</td>\n","      <td>Private</td>\n","      <td>151910</td>\n","      <td>HS-grad</td>\n","      <td>9</td>\n","      <td>Widowed</td>\n","      <td>Adm-clerical</td>\n","      <td>Unmarried</td>\n","      <td>White</td>\n","      <td>Female</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>40</td>\n","      <td>United-States</td>\n","      <td>&lt;=50K</td>\n","    </tr>\n","    <tr>\n","      <th>48840</th>\n","      <td>22</td>\n","      <td>Private</td>\n","      <td>201490</td>\n","      <td>HS-grad</td>\n","      <td>9</td>\n","      <td>Never-married</td>\n","      <td>Adm-clerical</td>\n","      <td>Own-child</td>\n","      <td>White</td>\n","      <td>Male</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>20</td>\n","      <td>United-States</td>\n","      <td>&lt;=50K</td>\n","    </tr>\n","    <tr>\n","      <th>48841</th>\n","      <td>52</td>\n","      <td>Self-emp-inc</td>\n","      <td>287927</td>\n","      <td>HS-grad</td>\n","      <td>9</td>\n","      <td>Married-civ-spouse</td>\n","      <td>Exec-managerial</td>\n","      <td>Wife</td>\n","      <td>White</td>\n","      <td>Female</td>\n","      <td>15024</td>\n","      <td>0</td>\n","      <td>40</td>\n","      <td>United-States</td>\n","      <td>&gt;50K</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>48842 rows × 15 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-84ba0a1b-0165-4f83-bc24-fd8d671ca1e2')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-84ba0a1b-0165-4f83-bc24-fd8d671ca1e2 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-84ba0a1b-0165-4f83-bc24-fd8d671ca1e2');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-7e7b2e20-b5ab-4d29-88c7-90d5c8ae4752\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-7e7b2e20-b5ab-4d29-88c7-90d5c8ae4752')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-7e7b2e20-b5ab-4d29-88c7-90d5c8ae4752 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","  <div id=\"id_e3837f59-0d79-4f19-b728-3c8a116270a0\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('data')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_e3837f59-0d79-4f19-b728-3c8a116270a0 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('data');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"data","summary":"{\n  \"name\": \"data\",\n  \"rows\": 48842,\n  \"fields\": [\n    {\n      \"column\": \"age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 13,\n        \"min\": 17,\n        \"max\": 90,\n        \"num_unique_values\": 74,\n        \"samples\": [\n          18,\n          74,\n          40\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"workclass\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 9,\n        \"samples\": [\n          \"Without-pay\",\n          \"Local-gov\",\n          \"State-gov\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"fnlwgt\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 105604,\n        \"min\": 12285,\n        \"max\": 1490400,\n        \"num_unique_values\": 28523,\n        \"samples\": [\n          171041,\n          20296,\n          263896\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"education\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 16,\n        \"samples\": [\n          \"11th\",\n          \"HS-grad\",\n          \"Prof-school\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"educational-num\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2,\n        \"min\": 1,\n        \"max\": 16,\n        \"num_unique_values\": 16,\n        \"samples\": [\n          7,\n          9,\n          15\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"marital-status\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 7,\n        \"samples\": [\n          \"Never-married\",\n          \"Married-civ-spouse\",\n          \"Married-spouse-absent\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"occupation\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 15,\n        \"samples\": [\n          \"Tech-support\",\n          \"Priv-house-serv\",\n          \"Machine-op-inspct\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"relationship\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 6,\n        \"samples\": [\n          \"Own-child\",\n          \"Husband\",\n          \"Other-relative\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"race\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"White\",\n          \"Amer-Indian-Eskimo\",\n          \"Asian-Pac-Islander\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"gender\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Female\",\n          \"Male\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"capital-gain\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 7452,\n        \"min\": 0,\n        \"max\": 99999,\n        \"num_unique_values\": 123,\n        \"samples\": [\n          4064,\n          4787\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"capital-loss\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 403,\n        \"min\": 0,\n        \"max\": 4356,\n        \"num_unique_values\": 99,\n        \"samples\": [\n          2238,\n          1564\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"hours-per-week\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 12,\n        \"min\": 1,\n        \"max\": 99,\n        \"num_unique_values\": 96,\n        \"samples\": [\n          9,\n          11\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"native-country\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 42,\n        \"samples\": [\n          \"Canada\",\n          \"Vietnam\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"income\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \">50K\",\n          \"<=50K\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":1}],"source":["# Employee salary prediction using adult csv\n","# load your libarary\n","import pandas as pd\n","data = pd.read_csv(r\"/content/adult 3 (1).csv\")\n","data"]},{"cell_type":"code","source":["from google.colab import drive\n","drive.mount('/content/drive')"],"metadata":{"id":"015GsuPUgP0S"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["# New Section"],"metadata":{"id":"4HDrQL9VMxfR"}},{"cell_type":"code","source":["data.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"57mb80fRNUdD","executionInfo":{"status":"ok","timestamp":1752820485444,"user_tz":-330,"elapsed":11,"user":{"displayName":"KOUSHIK Das","userId":"09056902619545898823"}},"outputId":"ab0e0be2-1074-4978-b16d-0d2e4fdd37f6"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(48842, 15)"]},"metadata":{},"execution_count":41}]},{"cell_type":"code","source":["data.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":399},"id":"YHg6jDRKNSoG","executionInfo":{"status":"ok","timestamp":1752820485626,"user_tz":-330,"elapsed":187,"user":{"displayName":"KOUSHIK Das","userId":"09056902619545898823"}},"outputId":"23a79039-094f-4ec6-d862-3545c0e56513"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   age  workclass  fnlwgt     education  educational-num      marital-status  \\\n","0   25    Private  226802          11th                7       Never-married   \n","1   38    Private   89814       HS-grad                9  Married-civ-spouse   \n","2   28  Local-gov  336951    Assoc-acdm               12  Married-civ-spouse   \n","3   44    Private  160323  Some-college               10  Married-civ-spouse   \n","4   18          ?  103497  Some-college               10       Never-married   \n","\n","          occupation relationship   race  gender  capital-gain  capital-loss  \\\n","0  Machine-op-inspct    Own-child  Black    Male             0             0   \n","1    Farming-fishing      Husband  White    Male             0             0   \n","2    Protective-serv      Husband  White    Male             0             0   \n","3  Machine-op-inspct      Husband  Black    Male          7688             0   \n","4                  ?    Own-child  White  Female             0             0   \n","\n","   hours-per-week native-country income  \n","0              40  United-States  <=50K  \n","1              50  United-States  <=50K  \n","2              40  United-States   >50K  \n","3              40  United-States   >50K  \n","4              30  United-States  <=50K  "],"text/html":["\n","  <div id=\"df-e352bbca-1a53-474d-bc17-b111136e38c8\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>age</th>\n","      <th>workclass</th>\n","      <th>fnlwgt</th>\n","      <th>education</th>\n","      <th>educational-num</th>\n","      <th>marital-status</th>\n","      <th>occupation</th>\n","      <th>relationship</th>\n","      <th>race</th>\n","      <th>gender</th>\n","      <th>capital-gain</th>\n","      <th>capital-loss</th>\n","      <th>hours-per-week</th>\n","      <th>native-country</th>\n","      <th>income</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>25</td>\n","      <td>Private</td>\n","      <td>226802</td>\n","      <td>11th</td>\n","      <td>7</td>\n","      <td>Never-married</td>\n","      <td>Machine-op-inspct</td>\n","      <td>Own-child</td>\n","      <td>Black</td>\n","      <td>Male</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>40</td>\n","      <td>United-States</td>\n","      <td>&lt;=50K</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>38</td>\n","      <td>Private</td>\n","      <td>89814</td>\n","      <td>HS-grad</td>\n","      <td>9</td>\n","      <td>Married-civ-spouse</td>\n","      <td>Farming-fishing</td>\n","      <td>Husband</td>\n","      <td>White</td>\n","      <td>Male</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>50</td>\n","      <td>United-States</td>\n","      <td>&lt;=50K</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>28</td>\n","      <td>Local-gov</td>\n","      <td>336951</td>\n","      <td>Assoc-acdm</td>\n","      <td>12</td>\n","      <td>Married-civ-spouse</td>\n","      <td>Protective-serv</td>\n","      <td>Husband</td>\n","      <td>White</td>\n","      <td>Male</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>40</td>\n","      <td>United-States</td>\n","      <td>&gt;50K</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>44</td>\n","      <td>Private</td>\n","      <td>160323</td>\n","      <td>Some-college</td>\n","      <td>10</td>\n","      <td>Married-civ-spouse</td>\n","      <td>Machine-op-inspct</td>\n","      <td>Husband</td>\n","      <td>Black</td>\n","      <td>Male</td>\n","      <td>7688</td>\n","      <td>0</td>\n","      <td>40</td>\n","      <td>United-States</td>\n","      <td>&gt;50K</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>18</td>\n","      <td>?</td>\n","      <td>103497</td>\n","      <td>Some-college</td>\n","      <td>10</td>\n","      <td>Never-married</td>\n","      <td>?</td>\n","      <td>Own-child</td>\n","      <td>White</td>\n","      <td>Female</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>30</td>\n","      <td>United-States</td>\n","      <td>&lt;=50K</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e352bbca-1a53-474d-bc17-b111136e38c8')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-e352bbca-1a53-474d-bc17-b111136e38c8 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-e352bbca-1a53-474d-bc17-b111136e38c8');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-0baaa285-e22f-47ab-be85-d706b29000fc\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-0baaa285-e22f-47ab-be85-d706b29000fc')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-0baaa285-e22f-47ab-be85-d706b29000fc button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"data","summary":"{\n  \"name\": \"data\",\n  \"rows\": 48842,\n  \"fields\": [\n    {\n      \"column\": \"age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 13,\n        \"min\": 17,\n        \"max\": 90,\n        \"num_unique_values\": 74,\n        \"samples\": [\n          18,\n          74,\n          40\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"workclass\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 9,\n        \"samples\": [\n          \"Without-pay\",\n          \"Local-gov\",\n          \"State-gov\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"fnlwgt\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 105604,\n        \"min\": 12285,\n        \"max\": 1490400,\n        \"num_unique_values\": 28523,\n        \"samples\": [\n          171041,\n          20296,\n          263896\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"education\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 16,\n        \"samples\": [\n          \"11th\",\n          \"HS-grad\",\n          \"Prof-school\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"educational-num\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2,\n        \"min\": 1,\n        \"max\": 16,\n        \"num_unique_values\": 16,\n        \"samples\": [\n          7,\n          9,\n          15\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"marital-status\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 7,\n        \"samples\": [\n          \"Never-married\",\n          \"Married-civ-spouse\",\n          \"Married-spouse-absent\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"occupation\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 15,\n        \"samples\": [\n          \"Tech-support\",\n          \"Priv-house-serv\",\n          \"Machine-op-inspct\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"relationship\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 6,\n        \"samples\": [\n          \"Own-child\",\n          \"Husband\",\n          \"Other-relative\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"race\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"White\",\n          \"Amer-Indian-Eskimo\",\n          \"Asian-Pac-Islander\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"gender\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Female\",\n          \"Male\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"capital-gain\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 7452,\n        \"min\": 0,\n        \"max\": 99999,\n        \"num_unique_values\": 123,\n        \"samples\": [\n          4064,\n          4787\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"capital-loss\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 403,\n        \"min\": 0,\n        \"max\": 4356,\n        \"num_unique_values\": 99,\n        \"samples\": [\n          2238,\n          1564\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"hours-per-week\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 12,\n        \"min\": 1,\n        \"max\": 99,\n        \"num_unique_values\": 96,\n        \"samples\": [\n          9,\n          11\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"native-country\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 42,\n        \"samples\": [\n          \"Canada\",\n          \"Vietnam\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"income\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \">50K\",\n          \"<=50K\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":42}]},{"cell_type":"markdown","source":["# New Section"],"metadata":{"id":"wCGX3abjMyMv"}},{"cell_type":"markdown","source":[],"metadata":{"id":"Qk5fvFekL2jy"}},{"cell_type":"code","source":["data.head(7)"],"metadata":{"id":"XJkzZhHfyLvm","executionInfo":{"status":"ok","timestamp":1752820485761,"user_tz":-330,"elapsed":134,"user":{"displayName":"KOUSHIK Das","userId":"09056902619545898823"}},"colab":{"base_uri":"https://localhost:8080/","height":497},"outputId":"2b5d0064-5ee0-40d7-c7f7-fe8e0260f058"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   age  workclass  fnlwgt     education  educational-num      marital-status  \\\n","0   25    Private  226802          11th                7       Never-married   \n","1   38    Private   89814       HS-grad                9  Married-civ-spouse   \n","2   28  Local-gov  336951    Assoc-acdm               12  Married-civ-spouse   \n","3   44    Private  160323  Some-college               10  Married-civ-spouse   \n","4   18          ?  103497  Some-college               10       Never-married   \n","5   34    Private  198693          10th                6       Never-married   \n","6   29          ?  227026       HS-grad                9       Never-married   \n","\n","          occupation   relationship   race  gender  capital-gain  \\\n","0  Machine-op-inspct      Own-child  Black    Male             0   \n","1    Farming-fishing        Husband  White    Male             0   \n","2    Protective-serv        Husband  White    Male             0   \n","3  Machine-op-inspct        Husband  Black    Male          7688   \n","4                  ?      Own-child  White  Female             0   \n","5      Other-service  Not-in-family  White    Male             0   \n","6                  ?      Unmarried  Black    Male             0   \n","\n","   capital-loss  hours-per-week native-country income  \n","0             0              40  United-States  <=50K  \n","1             0              50  United-States  <=50K  \n","2             0              40  United-States   >50K  \n","3             0              40  United-States   >50K  \n","4             0              30  United-States  <=50K  \n","5             0              30  United-States  <=50K  \n","6             0              40  United-States  <=50K  "],"text/html":["\n","  <div id=\"df-d66d8f11-8a6c-46b9-8710-7de8a24cf5dc\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>age</th>\n","      <th>workclass</th>\n","      <th>fnlwgt</th>\n","      <th>education</th>\n","      <th>educational-num</th>\n","      <th>marital-status</th>\n","      <th>occupation</th>\n","      <th>relationship</th>\n","      <th>race</th>\n","      <th>gender</th>\n","      <th>capital-gain</th>\n","      <th>capital-loss</th>\n","      <th>hours-per-week</th>\n","      <th>native-country</th>\n","      <th>income</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>25</td>\n","      <td>Private</td>\n","      <td>226802</td>\n","      <td>11th</td>\n","      <td>7</td>\n","      <td>Never-married</td>\n","      <td>Machine-op-inspct</td>\n","      <td>Own-child</td>\n","      <td>Black</td>\n","      <td>Male</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>40</td>\n","      <td>United-States</td>\n","      <td>&lt;=50K</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>38</td>\n","      <td>Private</td>\n","      <td>89814</td>\n","      <td>HS-grad</td>\n","      <td>9</td>\n","      <td>Married-civ-spouse</td>\n","      <td>Farming-fishing</td>\n","      <td>Husband</td>\n","      <td>White</td>\n","      <td>Male</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>50</td>\n","      <td>United-States</td>\n","      <td>&lt;=50K</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>28</td>\n","      <td>Local-gov</td>\n","      <td>336951</td>\n","      <td>Assoc-acdm</td>\n","      <td>12</td>\n","      <td>Married-civ-spouse</td>\n","      <td>Protective-serv</td>\n","      <td>Husband</td>\n","      <td>White</td>\n","      <td>Male</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>40</td>\n","      <td>United-States</td>\n","      <td>&gt;50K</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>44</td>\n","      <td>Private</td>\n","      <td>160323</td>\n","      <td>Some-college</td>\n","      <td>10</td>\n","      <td>Married-civ-spouse</td>\n","      <td>Machine-op-inspct</td>\n","      <td>Husband</td>\n","      <td>Black</td>\n","      <td>Male</td>\n","      <td>7688</td>\n","      <td>0</td>\n","      <td>40</td>\n","      <td>United-States</td>\n","      <td>&gt;50K</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>18</td>\n","      <td>?</td>\n","      <td>103497</td>\n","      <td>Some-college</td>\n","      <td>10</td>\n","      <td>Never-married</td>\n","      <td>?</td>\n","      <td>Own-child</td>\n","      <td>White</td>\n","      <td>Female</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>30</td>\n","      <td>United-States</td>\n","      <td>&lt;=50K</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>34</td>\n","      <td>Private</td>\n","      <td>198693</td>\n","      <td>10th</td>\n","      <td>6</td>\n","      <td>Never-married</td>\n","      <td>Other-service</td>\n","      <td>Not-in-family</td>\n","      <td>White</td>\n","      <td>Male</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>30</td>\n","      <td>United-States</td>\n","      <td>&lt;=50K</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>29</td>\n","      <td>?</td>\n","      <td>227026</td>\n","      <td>HS-grad</td>\n","      <td>9</td>\n","      <td>Never-married</td>\n","      <td>?</td>\n","      <td>Unmarried</td>\n","      <td>Black</td>\n","      <td>Male</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>40</td>\n","      <td>United-States</td>\n","      <td>&lt;=50K</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d66d8f11-8a6c-46b9-8710-7de8a24cf5dc')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-d66d8f11-8a6c-46b9-8710-7de8a24cf5dc button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-d66d8f11-8a6c-46b9-8710-7de8a24cf5dc');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-b9a84a34-f3e7-4883-8522-6736fa4c47b2\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-b9a84a34-f3e7-4883-8522-6736fa4c47b2')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-b9a84a34-f3e7-4883-8522-6736fa4c47b2 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"data","summary":"{\n  \"name\": \"data\",\n  \"rows\": 48842,\n  \"fields\": [\n    {\n      \"column\": \"age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 13,\n        \"min\": 17,\n        \"max\": 90,\n        \"num_unique_values\": 74,\n        \"samples\": [\n          18,\n          74,\n          40\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"workclass\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 9,\n        \"samples\": [\n          \"Without-pay\",\n          \"Local-gov\",\n          \"State-gov\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"fnlwgt\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 105604,\n        \"min\": 12285,\n        \"max\": 1490400,\n        \"num_unique_values\": 28523,\n        \"samples\": [\n          171041,\n          20296,\n          263896\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"education\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 16,\n        \"samples\": [\n          \"11th\",\n          \"HS-grad\",\n          \"Prof-school\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"educational-num\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2,\n        \"min\": 1,\n        \"max\": 16,\n        \"num_unique_values\": 16,\n        \"samples\": [\n          7,\n          9,\n          15\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"marital-status\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 7,\n        \"samples\": [\n          \"Never-married\",\n          \"Married-civ-spouse\",\n          \"Married-spouse-absent\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"occupation\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 15,\n        \"samples\": [\n          \"Tech-support\",\n          \"Priv-house-serv\",\n          \"Machine-op-inspct\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"relationship\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 6,\n        \"samples\": [\n          \"Own-child\",\n          \"Husband\",\n          \"Other-relative\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"race\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"White\",\n          \"Amer-Indian-Eskimo\",\n          \"Asian-Pac-Islander\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"gender\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Female\",\n          \"Male\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"capital-gain\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 7452,\n        \"min\": 0,\n        \"max\": 99999,\n        \"num_unique_values\": 123,\n        \"samples\": [\n          4064,\n          4787\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"capital-loss\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 403,\n        \"min\": 0,\n        \"max\": 4356,\n        \"num_unique_values\": 99,\n        \"samples\": [\n          2238,\n          1564\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"hours-per-week\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 12,\n        \"min\": 1,\n        \"max\": 99,\n        \"num_unique_values\": 96,\n        \"samples\": [\n          9,\n          11\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"native-country\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 42,\n        \"samples\": [\n          \"Canada\",\n          \"Vietnam\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"income\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \">50K\",\n          \"<=50K\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":43}]},{"cell_type":"code","source":["data.tail(7)"],"metadata":{"id":"tteSfEiVLQTO","executionInfo":{"status":"ok","timestamp":1752820485840,"user_tz":-330,"elapsed":75,"user":{"displayName":"KOUSHIK Das","userId":"09056902619545898823"}},"colab":{"base_uri":"https://localhost:8080/","height":514},"outputId":"e5448a59-4af8-4c23-ba38-c79b91a8041a"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       age     workclass  fnlwgt     education  educational-num  \\\n","48835   53       Private  321865       Masters               14   \n","48836   22       Private  310152  Some-college               10   \n","48837   27       Private  257302    Assoc-acdm               12   \n","48838   40       Private  154374       HS-grad                9   \n","48839   58       Private  151910       HS-grad                9   \n","48840   22       Private  201490       HS-grad                9   \n","48841   52  Self-emp-inc  287927       HS-grad                9   \n","\n","           marital-status         occupation   relationship   race  gender  \\\n","48835  Married-civ-spouse    Exec-managerial        Husband  White    Male   \n","48836       Never-married    Protective-serv  Not-in-family  White    Male   \n","48837  Married-civ-spouse       Tech-support           Wife  White  Female   \n","48838  Married-civ-spouse  Machine-op-inspct        Husband  White    Male   \n","48839             Widowed       Adm-clerical      Unmarried  White  Female   \n","48840       Never-married       Adm-clerical      Own-child  White    Male   \n","48841  Married-civ-spouse    Exec-managerial           Wife  White  Female   \n","\n","       capital-gain  capital-loss  hours-per-week native-country income  \n","48835             0             0              40  United-States   >50K  \n","48836             0             0              40  United-States  <=50K  \n","48837             0             0              38  United-States  <=50K  \n","48838             0             0              40  United-States   >50K  \n","48839             0             0              40  United-States  <=50K  \n","48840             0             0              20  United-States  <=50K  \n","48841         15024             0              40  United-States   >50K  "],"text/html":["\n","  <div id=\"df-7d459c8e-e06b-4da7-9bee-66b55285a1ad\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>age</th>\n","      <th>workclass</th>\n","      <th>fnlwgt</th>\n","      <th>education</th>\n","      <th>educational-num</th>\n","      <th>marital-status</th>\n","      <th>occupation</th>\n","      <th>relationship</th>\n","      <th>race</th>\n","      <th>gender</th>\n","      <th>capital-gain</th>\n","      <th>capital-loss</th>\n","      <th>hours-per-week</th>\n","      <th>native-country</th>\n","      <th>income</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>48835</th>\n","      <td>53</td>\n","      <td>Private</td>\n","      <td>321865</td>\n","      <td>Masters</td>\n","      <td>14</td>\n","      <td>Married-civ-spouse</td>\n","      <td>Exec-managerial</td>\n","      <td>Husband</td>\n","      <td>White</td>\n","      <td>Male</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>40</td>\n","      <td>United-States</td>\n","      <td>&gt;50K</td>\n","    </tr>\n","    <tr>\n","      <th>48836</th>\n","      <td>22</td>\n","      <td>Private</td>\n","      <td>310152</td>\n","      <td>Some-college</td>\n","      <td>10</td>\n","      <td>Never-married</td>\n","      <td>Protective-serv</td>\n","      <td>Not-in-family</td>\n","      <td>White</td>\n","      <td>Male</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>40</td>\n","      <td>United-States</td>\n","      <td>&lt;=50K</td>\n","    </tr>\n","    <tr>\n","      <th>48837</th>\n","      <td>27</td>\n","      <td>Private</td>\n","      <td>257302</td>\n","      <td>Assoc-acdm</td>\n","      <td>12</td>\n","      <td>Married-civ-spouse</td>\n","      <td>Tech-support</td>\n","      <td>Wife</td>\n","      <td>White</td>\n","      <td>Female</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>38</td>\n","      <td>United-States</td>\n","      <td>&lt;=50K</td>\n","    </tr>\n","    <tr>\n","      <th>48838</th>\n","      <td>40</td>\n","      <td>Private</td>\n","      <td>154374</td>\n","      <td>HS-grad</td>\n","      <td>9</td>\n","      <td>Married-civ-spouse</td>\n","      <td>Machine-op-inspct</td>\n","      <td>Husband</td>\n","      <td>White</td>\n","      <td>Male</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>40</td>\n","      <td>United-States</td>\n","      <td>&gt;50K</td>\n","    </tr>\n","    <tr>\n","      <th>48839</th>\n","      <td>58</td>\n","      <td>Private</td>\n","      <td>151910</td>\n","      <td>HS-grad</td>\n","      <td>9</td>\n","      <td>Widowed</td>\n","      <td>Adm-clerical</td>\n","      <td>Unmarried</td>\n","      <td>White</td>\n","      <td>Female</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>40</td>\n","      <td>United-States</td>\n","      <td>&lt;=50K</td>\n","    </tr>\n","    <tr>\n","      <th>48840</th>\n","      <td>22</td>\n","      <td>Private</td>\n","      <td>201490</td>\n","      <td>HS-grad</td>\n","      <td>9</td>\n","      <td>Never-married</td>\n","      <td>Adm-clerical</td>\n","      <td>Own-child</td>\n","      <td>White</td>\n","      <td>Male</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>20</td>\n","      <td>United-States</td>\n","      <td>&lt;=50K</td>\n","    </tr>\n","    <tr>\n","      <th>48841</th>\n","      <td>52</td>\n","      <td>Self-emp-inc</td>\n","      <td>287927</td>\n","      <td>HS-grad</td>\n","      <td>9</td>\n","      <td>Married-civ-spouse</td>\n","      <td>Exec-managerial</td>\n","      <td>Wife</td>\n","      <td>White</td>\n","      <td>Female</td>\n","      <td>15024</td>\n","      <td>0</td>\n","      <td>40</td>\n","      <td>United-States</td>\n","      <td>&gt;50K</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7d459c8e-e06b-4da7-9bee-66b55285a1ad')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-7d459c8e-e06b-4da7-9bee-66b55285a1ad button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-7d459c8e-e06b-4da7-9bee-66b55285a1ad');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-b856d791-f690-4d48-bf6d-99a2376320db\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-b856d791-f690-4d48-bf6d-99a2376320db')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-b856d791-f690-4d48-bf6d-99a2376320db button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"data\",\n  \"rows\": 7,\n  \"fields\": [\n    {\n      \"column\": \"age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 15,\n        \"min\": 22,\n        \"max\": 58,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          53,\n          22,\n          52\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"workclass\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Self-emp-inc\",\n          \"Private\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"fnlwgt\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 71636,\n        \"min\": 151910,\n        \"max\": 321865,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          321865,\n          310152\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"education\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          \"Some-college\",\n          \"HS-grad\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"educational-num\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 9,\n        \"max\": 14,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          10,\n          9\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"marital-status\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Married-civ-spouse\",\n          \"Never-married\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"occupation\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"Protective-serv\",\n          \"Adm-clerical\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"relationship\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"Not-in-family\",\n          \"Own-child\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"race\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"White\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"gender\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Female\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"capital-gain\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5678,\n        \"min\": 0,\n        \"max\": 15024,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          15024\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"capital-loss\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 0,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"hours-per-week\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 7,\n        \"min\": 20,\n        \"max\": 40,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          40\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"native-country\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"United-States\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"income\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"<=50K\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":44}]},{"cell_type":"code","source":["# null values\n","data.isna().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":554},"id":"BdzTKN7_OPna","executionInfo":{"status":"ok","timestamp":1752820485943,"user_tz":-330,"elapsed":101,"user":{"displayName":"KOUSHIK Das","userId":"09056902619545898823"}},"outputId":"5fd9995a-6c1e-4aed-a43c-2775dcedbe97"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["age                0\n","workclass          0\n","fnlwgt             0\n","education          0\n","educational-num    0\n","marital-status     0\n","occupation         0\n","relationship       0\n","race               0\n","gender             0\n","capital-gain       0\n","capital-loss       0\n","hours-per-week     0\n","native-country     0\n","income             0\n","dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>age</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>workclass</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>fnlwgt</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>education</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>educational-num</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>marital-status</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>occupation</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>relationship</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>race</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>gender</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>capital-gain</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>capital-loss</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>hours-per-week</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>native-country</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>income</th>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":45}]},{"cell_type":"code","source":["print(data.occupation.value_counts())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Yb_0GObXOuey","executionInfo":{"status":"ok","timestamp":1752820485943,"user_tz":-330,"elapsed":86,"user":{"displayName":"KOUSHIK Das","userId":"09056902619545898823"}},"outputId":"2aa4c315-f6c9-4ba7-b505-c8dd9339497e"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["occupation\n","Prof-specialty       6172\n","Craft-repair         6112\n","Exec-managerial      6086\n","Adm-clerical         5611\n","Sales                5504\n","Other-service        4923\n","Machine-op-inspct    3022\n","?                    2809\n","Transport-moving     2355\n","Handlers-cleaners    2072\n","Farming-fishing      1490\n","Tech-support         1446\n","Protective-serv       983\n","Priv-house-serv       242\n","Armed-Forces           15\n","Name: count, dtype: int64\n"]}]},{"cell_type":"code","source":["print(data.gender.value_counts())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"8xvZL50vPPsB","executionInfo":{"status":"ok","timestamp":1752820485943,"user_tz":-330,"elapsed":35,"user":{"displayName":"KOUSHIK Das","userId":"09056902619545898823"}},"outputId":"a0906774-3c45-4328-f49b-e93054ee057f"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["gender\n","Male      32650\n","Female    16192\n","Name: count, dtype: int64\n"]}]},{"cell_type":"code","source":["print(data.education.value_counts())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"U6wewZwYPVki","executionInfo":{"status":"ok","timestamp":1752820485944,"user_tz":-330,"elapsed":16,"user":{"displayName":"KOUSHIK Das","userId":"09056902619545898823"}},"outputId":"ec482800-0555-4ceb-8942-0694ea00d957"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["education\n","HS-grad         15784\n","Some-college    10878\n","Bachelors        8025\n","Masters          2657\n","Assoc-voc        2061\n","11th             1812\n","Assoc-acdm       1601\n","10th             1389\n","7th-8th           955\n","Prof-school       834\n","9th               756\n","12th              657\n","Doctorate         594\n","5th-6th           509\n","1st-4th           247\n","Preschool          83\n","Name: count, dtype: int64\n"]}]},{"cell_type":"code","source":["print(data.workclass.value_counts())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"u0vtTZVsIKRC","executionInfo":{"status":"ok","timestamp":1752820485944,"user_tz":-330,"elapsed":8,"user":{"displayName":"KOUSHIK Das","userId":"09056902619545898823"}},"outputId":"890ec3c4-106e-4305-836f-e162aac5115a"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["workclass\n","Private             33906\n","Self-emp-not-inc     3862\n","Local-gov            3136\n","?                    2799\n","State-gov            1981\n","Self-emp-inc         1695\n","Federal-gov          1432\n","Without-pay            21\n","Never-worked           10\n","Name: count, dtype: int64\n"]}]},{"cell_type":"code","source":["data=data[data['workclass']!='without-pay']\n","data=data[data['workclass']!='never-pay']\n","print(data['workclass'].value_counts())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"iNFTydXN-JWl","executionInfo":{"status":"ok","timestamp":1752820485987,"user_tz":-330,"elapsed":46,"user":{"displayName":"KOUSHIK Das","userId":"09056902619545898823"}},"outputId":"c9ba20a9-09e5-4fd4-f241-f7bd951b7b12"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["workclass\n","Private             33906\n","Self-emp-not-inc     3862\n","Local-gov            3136\n","?                    2799\n","State-gov            1981\n","Self-emp-inc         1695\n","Federal-gov          1432\n","Without-pay            21\n","Never-worked           10\n","Name: count, dtype: int64\n"]}]},{"cell_type":"code","source":["data=data[data['education']!='5th-6th']\n","data=data[data['education']!='Hs-grad']\n","data=data[data['education']!='preschool']\n","print(data['education'].value_counts())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"lPqlar-6Oe8R","executionInfo":{"status":"ok","timestamp":1752820485988,"user_tz":-330,"elapsed":37,"user":{"displayName":"KOUSHIK Das","userId":"09056902619545898823"}},"outputId":"61a6094d-057c-4f52-d8fb-54e41cbe7f38"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["education\n","HS-grad         15784\n","Some-college    10878\n","Bachelors        8025\n","Masters          2657\n","Assoc-voc        2061\n","11th             1812\n","Assoc-acdm       1601\n","10th             1389\n","7th-8th           955\n","Prof-school       834\n","9th               756\n","12th              657\n","Doctorate         594\n","1st-4th           247\n","Preschool          83\n","Name: count, dtype: int64\n"]}]},{"cell_type":"code","source":["data.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"aWvqKpKVWVbb","executionInfo":{"status":"ok","timestamp":1752820485989,"user_tz":-330,"elapsed":18,"user":{"displayName":"KOUSHIK Das","userId":"09056902619545898823"}},"outputId":"6f0e78a3-0324-4a46-8d0c-a4cbb8a0c8de"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(48333, 15)"]},"metadata":{},"execution_count":52}]},{"cell_type":"code","source":["# redundary\n","data.drop(columns=['education'],inplace=True)\n","data"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":736},"id":"CFny67jB4N98","executionInfo":{"status":"ok","timestamp":1752820486040,"user_tz":-330,"elapsed":60,"user":{"displayName":"KOUSHIK Das","userId":"09056902619545898823"}},"outputId":"7acb7eaa-0c02-4d78-d009-9b3a45b795fc"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       age     workclass  fnlwgt  educational-num      marital-status  \\\n","0       25       Private  226802                7       Never-married   \n","1       38       Private   89814                9  Married-civ-spouse   \n","2       28     Local-gov  336951               12  Married-civ-spouse   \n","3       44       Private  160323               10  Married-civ-spouse   \n","4       18             ?  103497               10       Never-married   \n","...    ...           ...     ...              ...                 ...   \n","48837   27       Private  257302               12  Married-civ-spouse   \n","48838   40       Private  154374                9  Married-civ-spouse   \n","48839   58       Private  151910                9             Widowed   \n","48840   22       Private  201490                9       Never-married   \n","48841   52  Self-emp-inc  287927                9  Married-civ-spouse   \n","\n","              occupation relationship   race  gender  capital-gain  \\\n","0      Machine-op-inspct    Own-child  Black    Male             0   \n","1        Farming-fishing      Husband  White    Male             0   \n","2        Protective-serv      Husband  White    Male             0   \n","3      Machine-op-inspct      Husband  Black    Male          7688   \n","4                      ?    Own-child  White  Female             0   \n","...                  ...          ...    ...     ...           ...   \n","48837       Tech-support         Wife  White  Female             0   \n","48838  Machine-op-inspct      Husband  White    Male             0   \n","48839       Adm-clerical    Unmarried  White  Female             0   \n","48840       Adm-clerical    Own-child  White    Male             0   \n","48841    Exec-managerial         Wife  White  Female         15024   \n","\n","       capital-loss  hours-per-week native-country income  \n","0                 0              40  United-States  <=50K  \n","1                 0              50  United-States  <=50K  \n","2                 0              40  United-States   >50K  \n","3                 0              40  United-States   >50K  \n","4                 0              30  United-States  <=50K  \n","...             ...             ...            ...    ...  \n","48837             0              38  United-States  <=50K  \n","48838             0              40  United-States   >50K  \n","48839             0              40  United-States  <=50K  \n","48840             0              20  United-States  <=50K  \n","48841             0              40  United-States   >50K  \n","\n","[48333 rows x 14 columns]"],"text/html":["\n","  <div id=\"df-212b9b76-57b3-4404-9c5f-5843ad025a4f\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>age</th>\n","      <th>workclass</th>\n","      <th>fnlwgt</th>\n","      <th>educational-num</th>\n","      <th>marital-status</th>\n","      <th>occupation</th>\n","      <th>relationship</th>\n","      <th>race</th>\n","      <th>gender</th>\n","      <th>capital-gain</th>\n","      <th>capital-loss</th>\n","      <th>hours-per-week</th>\n","      <th>native-country</th>\n","      <th>income</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>25</td>\n","      <td>Private</td>\n","      <td>226802</td>\n","      <td>7</td>\n","      <td>Never-married</td>\n","      <td>Machine-op-inspct</td>\n","      <td>Own-child</td>\n","      <td>Black</td>\n","      <td>Male</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>40</td>\n","      <td>United-States</td>\n","      <td>&lt;=50K</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>38</td>\n","      <td>Private</td>\n","      <td>89814</td>\n","      <td>9</td>\n","      <td>Married-civ-spouse</td>\n","      <td>Farming-fishing</td>\n","      <td>Husband</td>\n","      <td>White</td>\n","      <td>Male</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>50</td>\n","      <td>United-States</td>\n","      <td>&lt;=50K</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>28</td>\n","      <td>Local-gov</td>\n","      <td>336951</td>\n","      <td>12</td>\n","      <td>Married-civ-spouse</td>\n","      <td>Protective-serv</td>\n","      <td>Husband</td>\n","      <td>White</td>\n","      <td>Male</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>40</td>\n","      <td>United-States</td>\n","      <td>&gt;50K</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>44</td>\n","      <td>Private</td>\n","      <td>160323</td>\n","      <td>10</td>\n","      <td>Married-civ-spouse</td>\n","      <td>Machine-op-inspct</td>\n","      <td>Husband</td>\n","      <td>Black</td>\n","      <td>Male</td>\n","      <td>7688</td>\n","      <td>0</td>\n","      <td>40</td>\n","      <td>United-States</td>\n","      <td>&gt;50K</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>18</td>\n","      <td>?</td>\n","      <td>103497</td>\n","      <td>10</td>\n","      <td>Never-married</td>\n","      <td>?</td>\n","      <td>Own-child</td>\n","      <td>White</td>\n","      <td>Female</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>30</td>\n","      <td>United-States</td>\n","      <td>&lt;=50K</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>48837</th>\n","      <td>27</td>\n","      <td>Private</td>\n","      <td>257302</td>\n","      <td>12</td>\n","      <td>Married-civ-spouse</td>\n","      <td>Tech-support</td>\n","      <td>Wife</td>\n","      <td>White</td>\n","      <td>Female</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>38</td>\n","      <td>United-States</td>\n","      <td>&lt;=50K</td>\n","    </tr>\n","    <tr>\n","      <th>48838</th>\n","      <td>40</td>\n","      <td>Private</td>\n","      <td>154374</td>\n","      <td>9</td>\n","      <td>Married-civ-spouse</td>\n","      <td>Machine-op-inspct</td>\n","      <td>Husband</td>\n","      <td>White</td>\n","      <td>Male</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>40</td>\n","      <td>United-States</td>\n","      <td>&gt;50K</td>\n","    </tr>\n","    <tr>\n","      <th>48839</th>\n","      <td>58</td>\n","      <td>Private</td>\n","      <td>151910</td>\n","      <td>9</td>\n","      <td>Widowed</td>\n","      <td>Adm-clerical</td>\n","      <td>Unmarried</td>\n","      <td>White</td>\n","      <td>Female</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>40</td>\n","      <td>United-States</td>\n","      <td>&lt;=50K</td>\n","    </tr>\n","    <tr>\n","      <th>48840</th>\n","      <td>22</td>\n","      <td>Private</td>\n","      <td>201490</td>\n","      <td>9</td>\n","      <td>Never-married</td>\n","      <td>Adm-clerical</td>\n","      <td>Own-child</td>\n","      <td>White</td>\n","      <td>Male</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>20</td>\n","      <td>United-States</td>\n","      <td>&lt;=50K</td>\n","    </tr>\n","    <tr>\n","      <th>48841</th>\n","      <td>52</td>\n","      <td>Self-emp-inc</td>\n","      <td>287927</td>\n","      <td>9</td>\n","      <td>Married-civ-spouse</td>\n","      <td>Exec-managerial</td>\n","      <td>Wife</td>\n","      <td>White</td>\n","      <td>Female</td>\n","      <td>15024</td>\n","      <td>0</td>\n","      <td>40</td>\n","      <td>United-States</td>\n","      <td>&gt;50K</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>48333 rows × 14 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-212b9b76-57b3-4404-9c5f-5843ad025a4f')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-212b9b76-57b3-4404-9c5f-5843ad025a4f button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-212b9b76-57b3-4404-9c5f-5843ad025a4f');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-73bcc0d1-70d8-46be-83e9-c3882b85dd35\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-73bcc0d1-70d8-46be-83e9-c3882b85dd35')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-73bcc0d1-70d8-46be-83e9-c3882b85dd35 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","  <div id=\"id_4dc659f8-e1c6-482f-a712-8183f58dc74f\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('data')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_4dc659f8-e1c6-482f-a712-8183f58dc74f button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('data');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"data","summary":"{\n  \"name\": \"data\",\n  \"rows\": 48333,\n  \"fields\": [\n    {\n      \"column\": \"age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 13,\n        \"min\": 17,\n        \"max\": 90,\n        \"num_unique_values\": 74,\n        \"samples\": [\n          18,\n          74,\n          40\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"workclass\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 9,\n        \"samples\": [\n          \"Without-pay\",\n          \"Local-gov\",\n          \"State-gov\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"fnlwgt\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 105498,\n        \"min\": 12285,\n        \"max\": 1490400,\n        \"num_unique_values\": 28279,\n        \"samples\": [\n          358893,\n          72208,\n          221129\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"educational-num\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2,\n        \"min\": 1,\n        \"max\": 16,\n        \"num_unique_values\": 15,\n        \"samples\": [\n          16,\n          5,\n          7\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"marital-status\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 7,\n        \"samples\": [\n          \"Never-married\",\n          \"Married-civ-spouse\",\n          \"Married-spouse-absent\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"occupation\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 15,\n        \"samples\": [\n          \"Tech-support\",\n          \"Transport-moving\",\n          \"Machine-op-inspct\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"relationship\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 6,\n        \"samples\": [\n          \"Own-child\",\n          \"Husband\",\n          \"Other-relative\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"race\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"White\",\n          \"Amer-Indian-Eskimo\",\n          \"Asian-Pac-Islander\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"gender\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Female\",\n          \"Male\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"capital-gain\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 7476,\n        \"min\": 0,\n        \"max\": 99999,\n        \"num_unique_values\": 123,\n        \"samples\": [\n          4064,\n          4787\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"capital-loss\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 403,\n        \"min\": 0,\n        \"max\": 4356,\n        \"num_unique_values\": 99,\n        \"samples\": [\n          653,\n          2547\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"hours-per-week\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 12,\n        \"min\": 1,\n        \"max\": 99,\n        \"num_unique_values\": 96,\n        \"samples\": [\n          9,\n          11\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"native-country\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 42,\n        \"samples\": [\n          \"China\",\n          \"South\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"income\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \">50K\",\n          \"<=50K\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":53}]},{"cell_type":"code","source":["# outlier\n","import matplotlib.pyplot as plt\n","plt.boxplot(data['age'])\n","plt.show()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":430},"id":"z6Grj1Mo5Sht","executionInfo":{"status":"ok","timestamp":1752820486071,"user_tz":-330,"elapsed":30,"user":{"displayName":"KOUSHIK Das","userId":"09056902619545898823"}},"outputId":"e8096491-bb2d-491e-82a8-e3a401fce0f7"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"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\n"},"metadata":{}}]},{"cell_type":"markdown","source":["# New Section"],"metadata":{"id":"psyNZOH04dDC"}},{"cell_type":"code","source":["data = data[(data['age']<=75)&(data['age']>=17)]\n","plt.boxplot(data['age'])\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":430},"id":"UZAUjbeQ9EHV","executionInfo":{"status":"ok","timestamp":1752820486095,"user_tz":-330,"elapsed":26,"user":{"displayName":"KOUSHIK Das","userId":"09056902619545898823"}},"outputId":"ba2be54f-01d3-412e-cb77-9d6cddf96031"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["from sklearn.preprocessing import LabelEncoder\n","encoder=LabelEncoder()\n","data['workclass']=encoder.fit_transform(data['workclass'])\n","data['occupation']=encoder.fit_transform(data['occupation'])\n","data['gender']=encoder.fit_transform(data['gender'])\n","data['race']=encoder.fit_transform(data['race'])\n","data['native-country']=encoder.fit_transform(data['native-country'])\n","data['marital-status']=encoder.fit_transform(data['marital-status'])\n","data"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"pbKL6__1eK8b","executionInfo":{"status":"ok","timestamp":1752820486158,"user_tz":-330,"elapsed":62,"user":{"displayName":"KOUSHIK Das","userId":"09056902619545898823"}},"outputId":"9305348f-df66-4fc4-ed00-6ddd0f93f4c2","collapsed":true},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["/tmp/ipython-input-56-3576112290.py:3: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  data['workclass']=encoder.fit_transform(data['workclass'])\n","/tmp/ipython-input-56-3576112290.py:4: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  data['occupation']=encoder.fit_transform(data['occupation'])\n","/tmp/ipython-input-56-3576112290.py:5: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  data['gender']=encoder.fit_transform(data['gender'])\n","/tmp/ipython-input-56-3576112290.py:6: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  data['race']=encoder.fit_transform(data['race'])\n","/tmp/ipython-input-56-3576112290.py:7: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  data['native-country']=encoder.fit_transform(data['native-country'])\n","/tmp/ipython-input-56-3576112290.py:8: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  data['marital-status']=encoder.fit_transform(data['marital-status'])\n"]},{"output_type":"execute_result","data":{"text/plain":["       age  workclass  fnlwgt  educational-num  marital-status  occupation  \\\n","0       25          4  226802                7               4           7   \n","1       38          4   89814                9               2           5   \n","2       28          2  336951               12               2          11   \n","3       44          4  160323               10               2           7   \n","4       18          0  103497               10               4           0   \n","...    ...        ...     ...              ...             ...         ...   \n","48837   27          4  257302               12               2          13   \n","48838   40          4  154374                9               2           7   \n","48839   58          4  151910                9               6           1   \n","48840   22          4  201490                9               4           1   \n","48841   52          5  287927                9               2           4   \n","\n","      relationship  race  gender  capital-gain  capital-loss  hours-per-week  \\\n","0        Own-child     2       1             0             0              40   \n","1          Husband     4       1             0             0              50   \n","2          Husband     4       1             0             0              40   \n","3          Husband     2       1          7688             0              40   \n","4        Own-child     4       0             0             0              30   \n","...            ...   ...     ...           ...           ...             ...   \n","48837         Wife     4       0             0             0              38   \n","48838      Husband     4       1             0             0              40   \n","48839    Unmarried     4       0             0             0              40   \n","48840    Own-child     4       1             0             0              20   \n","48841         Wife     4       0         15024             0              40   \n","\n","       native-country income  \n","0                  39  <=50K  \n","1                  39  <=50K  \n","2                  39   >50K  \n","3                  39   >50K  \n","4                  39  <=50K  \n","...               ...    ...  \n","48837              39  <=50K  \n","48838              39   >50K  \n","48839              39  <=50K  \n","48840              39  <=50K  \n","48841              39   >50K  \n","\n","[47971 rows x 14 columns]"],"text/html":["\n","  <div id=\"df-d766a3e2-7147-4b10-89b9-d6752fef3dd1\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>age</th>\n","      <th>workclass</th>\n","      <th>fnlwgt</th>\n","      <th>educational-num</th>\n","      <th>marital-status</th>\n","      <th>occupation</th>\n","      <th>relationship</th>\n","      <th>race</th>\n","      <th>gender</th>\n","      <th>capital-gain</th>\n","      <th>capital-loss</th>\n","      <th>hours-per-week</th>\n","      <th>native-country</th>\n","      <th>income</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>25</td>\n","      <td>4</td>\n","      <td>226802</td>\n","      <td>7</td>\n","      <td>4</td>\n","      <td>7</td>\n","      <td>Own-child</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>40</td>\n","      <td>39</td>\n","      <td>&lt;=50K</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>38</td>\n","      <td>4</td>\n","      <td>89814</td>\n","      <td>9</td>\n","      <td>2</td>\n","      <td>5</td>\n","      <td>Husband</td>\n","      <td>4</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>50</td>\n","      <td>39</td>\n","      <td>&lt;=50K</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>28</td>\n","      <td>2</td>\n","      <td>336951</td>\n","      <td>12</td>\n","      <td>2</td>\n","      <td>11</td>\n","      <td>Husband</td>\n","      <td>4</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>40</td>\n","      <td>39</td>\n","      <td>&gt;50K</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>44</td>\n","      <td>4</td>\n","      <td>160323</td>\n","      <td>10</td>\n","      <td>2</td>\n","      <td>7</td>\n","      <td>Husband</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>7688</td>\n","      <td>0</td>\n","      <td>40</td>\n","      <td>39</td>\n","      <td>&gt;50K</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>18</td>\n","      <td>0</td>\n","      <td>103497</td>\n","      <td>10</td>\n","      <td>4</td>\n","      <td>0</td>\n","      <td>Own-child</td>\n","      <td>4</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>30</td>\n","      <td>39</td>\n","      <td>&lt;=50K</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>48837</th>\n","      <td>27</td>\n","      <td>4</td>\n","      <td>257302</td>\n","      <td>12</td>\n","      <td>2</td>\n","      <td>13</td>\n","      <td>Wife</td>\n","      <td>4</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>38</td>\n","      <td>39</td>\n","      <td>&lt;=50K</td>\n","    </tr>\n","    <tr>\n","      <th>48838</th>\n","      <td>40</td>\n","      <td>4</td>\n","      <td>154374</td>\n","      <td>9</td>\n","      <td>2</td>\n","      <td>7</td>\n","      <td>Husband</td>\n","      <td>4</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>40</td>\n","      <td>39</td>\n","      <td>&gt;50K</td>\n","    </tr>\n","    <tr>\n","      <th>48839</th>\n","      <td>58</td>\n","      <td>4</td>\n","      <td>151910</td>\n","      <td>9</td>\n","      <td>6</td>\n","      <td>1</td>\n","      <td>Unmarried</td>\n","      <td>4</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>40</td>\n","      <td>39</td>\n","      <td>&lt;=50K</td>\n","    </tr>\n","    <tr>\n","      <th>48840</th>\n","      <td>22</td>\n","      <td>4</td>\n","      <td>201490</td>\n","      <td>9</td>\n","      <td>4</td>\n","      <td>1</td>\n","      <td>Own-child</td>\n","      <td>4</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>20</td>\n","      <td>39</td>\n","      <td>&lt;=50K</td>\n","    </tr>\n","    <tr>\n","      <th>48841</th>\n","      <td>52</td>\n","      <td>5</td>\n","      <td>287927</td>\n","      <td>9</td>\n","      <td>2</td>\n","      <td>4</td>\n","      <td>Wife</td>\n","      <td>4</td>\n","      <td>0</td>\n","      <td>15024</td>\n","      <td>0</td>\n","      <td>40</td>\n","      <td>39</td>\n","      <td>&gt;50K</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>47971 rows × 14 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d766a3e2-7147-4b10-89b9-d6752fef3dd1')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-d766a3e2-7147-4b10-89b9-d6752fef3dd1 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-d766a3e2-7147-4b10-89b9-d6752fef3dd1');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-9684aecc-0a7a-44df-bd0c-ab7064290905\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-9684aecc-0a7a-44df-bd0c-ab7064290905')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-9684aecc-0a7a-44df-bd0c-ab7064290905 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","  <div id=\"id_0cf844f6-2829-4880-80fb-e894feb232e6\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('data')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_0cf844f6-2829-4880-80fb-e894feb232e6 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('data');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"data","summary":"{\n  \"name\": \"data\",\n  \"rows\": 47971,\n  \"fields\": [\n    {\n      \"column\": \"age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 13,\n        \"min\": 17,\n        \"max\": 75,\n        \"num_unique_values\": 59,\n        \"samples\": [\n          25,\n          34,\n          47\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"workclass\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 0,\n        \"max\": 8,\n        \"num_unique_values\": 9,\n        \"samples\": [\n          8,\n          2,\n          7\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"fnlwgt\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 105603,\n        \"min\": 12285,\n        \"max\": 1490400,\n        \"num_unique_values\": 28001,\n        \"samples\": [\n          328881,\n          147766,\n          133729\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"educational-num\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2,\n        \"min\": 1,\n        \"max\": 16,\n        \"num_unique_values\": 15,\n        \"samples\": [\n          16,\n          5,\n          7\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"marital-status\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 0,\n        \"max\": 6,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          4,\n          2,\n          3\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"occupation\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4,\n        \"min\": 0,\n        \"max\": 14,\n        \"num_unique_values\": 15,\n        \"samples\": [\n          13,\n          14,\n          7\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"relationship\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 6,\n        \"samples\": [\n          \"Own-child\",\n          \"Husband\",\n          \"Other-relative\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"race\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 4,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          4,\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"gender\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"capital-gain\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 7471,\n        \"min\": 0,\n        \"max\": 99999,\n        \"num_unique_values\": 123,\n        \"samples\": [\n          4064,\n          4787\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"capital-loss\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 402,\n        \"min\": 0,\n        \"max\": 4356,\n        \"num_unique_values\": 99,\n        \"samples\": [\n          2246,\n          2002\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"hours-per-week\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 12,\n        \"min\": 1,\n        \"max\": 99,\n        \"num_unique_values\": 96,\n        \"samples\": [\n          9,\n          11\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"native-country\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 7,\n        \"min\": 0,\n        \"max\": 41,\n        \"num_unique_values\": 42,\n        \"samples\": [\n          3,\n          35\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"income\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \">50K\",\n          \"<=50K\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":56}]},{"cell_type":"code","source":["x=data.drop(columns=['income'])\n","y=data['income']\n","x"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":441},"id":"W-QVylA3kiVL","executionInfo":{"status":"ok","timestamp":1752820486196,"user_tz":-330,"elapsed":36,"user":{"displayName":"KOUSHIK Das","userId":"09056902619545898823"}},"outputId":"e3faa188-b0a1-4be7-e25c-94793926f399"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       age  workclass  fnlwgt  educational-num  marital-status  occupation  \\\n","0       25          4  226802                7               4           7   \n","1       38          4   89814                9               2           5   \n","2       28          2  336951               12               2          11   \n","3       44          4  160323               10               2           7   \n","4       18          0  103497               10               4           0   \n","...    ...        ...     ...              ...             ...         ...   \n","48837   27          4  257302               12               2          13   \n","48838   40          4  154374                9               2           7   \n","48839   58          4  151910                9               6           1   \n","48840   22          4  201490                9               4           1   \n","48841   52          5  287927                9               2           4   \n","\n","      relationship  race  gender  capital-gain  capital-loss  hours-per-week  \\\n","0        Own-child     2       1             0             0              40   \n","1          Husband     4       1             0             0              50   \n","2          Husband     4       1             0             0              40   \n","3          Husband     2       1          7688             0              40   \n","4        Own-child     4       0             0             0              30   \n","...            ...   ...     ...           ...           ...             ...   \n","48837         Wife     4       0             0             0              38   \n","48838      Husband     4       1             0             0              40   \n","48839    Unmarried     4       0             0             0              40   \n","48840    Own-child     4       1             0             0              20   \n","48841         Wife     4       0         15024             0              40   \n","\n","       native-country  \n","0                  39  \n","1                  39  \n","2                  39  \n","3                  39  \n","4                  39  \n","...               ...  \n","48837              39  \n","48838              39  \n","48839              39  \n","48840              39  \n","48841              39  \n","\n","[47971 rows x 13 columns]"],"text/html":["\n","  <div id=\"df-497056bf-4f30-439c-9a0f-080c14007301\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>age</th>\n","      <th>workclass</th>\n","      <th>fnlwgt</th>\n","      <th>educational-num</th>\n","      <th>marital-status</th>\n","      <th>occupation</th>\n","      <th>relationship</th>\n","      <th>race</th>\n","      <th>gender</th>\n","      <th>capital-gain</th>\n","      <th>capital-loss</th>\n","      <th>hours-per-week</th>\n","      <th>native-country</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>25</td>\n","      <td>4</td>\n","      <td>226802</td>\n","      <td>7</td>\n","      <td>4</td>\n","      <td>7</td>\n","      <td>Own-child</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>40</td>\n","      <td>39</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>38</td>\n","      <td>4</td>\n","      <td>89814</td>\n","      <td>9</td>\n","      <td>2</td>\n","      <td>5</td>\n","      <td>Husband</td>\n","      <td>4</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>50</td>\n","      <td>39</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>28</td>\n","      <td>2</td>\n","      <td>336951</td>\n","      <td>12</td>\n","      <td>2</td>\n","      <td>11</td>\n","      <td>Husband</td>\n","      <td>4</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>40</td>\n","      <td>39</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>44</td>\n","      <td>4</td>\n","      <td>160323</td>\n","      <td>10</td>\n","      <td>2</td>\n","      <td>7</td>\n","      <td>Husband</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>7688</td>\n","      <td>0</td>\n","      <td>40</td>\n","      <td>39</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>18</td>\n","      <td>0</td>\n","      <td>103497</td>\n","      <td>10</td>\n","      <td>4</td>\n","      <td>0</td>\n","      <td>Own-child</td>\n","      <td>4</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>30</td>\n","      <td>39</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>48837</th>\n","      <td>27</td>\n","      <td>4</td>\n","      <td>257302</td>\n","      <td>12</td>\n","      <td>2</td>\n","      <td>13</td>\n","      <td>Wife</td>\n","      <td>4</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>38</td>\n","      <td>39</td>\n","    </tr>\n","    <tr>\n","      <th>48838</th>\n","      <td>40</td>\n","      <td>4</td>\n","      <td>154374</td>\n","      <td>9</td>\n","      <td>2</td>\n","      <td>7</td>\n","      <td>Husband</td>\n","      <td>4</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>40</td>\n","      <td>39</td>\n","    </tr>\n","    <tr>\n","      <th>48839</th>\n","      <td>58</td>\n","      <td>4</td>\n","      <td>151910</td>\n","      <td>9</td>\n","      <td>6</td>\n","      <td>1</td>\n","      <td>Unmarried</td>\n","      <td>4</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>40</td>\n","      <td>39</td>\n","    </tr>\n","    <tr>\n","      <th>48840</th>\n","      <td>22</td>\n","      <td>4</td>\n","      <td>201490</td>\n","      <td>9</td>\n","      <td>4</td>\n","      <td>1</td>\n","      <td>Own-child</td>\n","      <td>4</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>20</td>\n","      <td>39</td>\n","    </tr>\n","    <tr>\n","      <th>48841</th>\n","      <td>52</td>\n","      <td>5</td>\n","      <td>287927</td>\n","      <td>9</td>\n","      <td>2</td>\n","      <td>4</td>\n","      <td>Wife</td>\n","      <td>4</td>\n","      <td>0</td>\n","      <td>15024</td>\n","      <td>0</td>\n","      <td>40</td>\n","      <td>39</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>47971 rows × 13 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-497056bf-4f30-439c-9a0f-080c14007301')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-497056bf-4f30-439c-9a0f-080c14007301 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-497056bf-4f30-439c-9a0f-080c14007301');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-49daf4c1-ea26-4f13-bb73-060ec32ff253\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-49daf4c1-ea26-4f13-bb73-060ec32ff253')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-49daf4c1-ea26-4f13-bb73-060ec32ff253 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","  <div id=\"id_a318d727-153e-4a08-9d7b-b2059ed847d0\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('x')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_a318d727-153e-4a08-9d7b-b2059ed847d0 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('x');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"x","summary":"{\n  \"name\": \"x\",\n  \"rows\": 47971,\n  \"fields\": [\n    {\n      \"column\": \"age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 13,\n        \"min\": 17,\n        \"max\": 75,\n        \"num_unique_values\": 59,\n        \"samples\": [\n          25,\n          34,\n          47\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"workclass\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 0,\n        \"max\": 8,\n        \"num_unique_values\": 9,\n        \"samples\": [\n          8,\n          2,\n          7\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"fnlwgt\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 105603,\n        \"min\": 12285,\n        \"max\": 1490400,\n        \"num_unique_values\": 28001,\n        \"samples\": [\n          328881,\n          147766,\n          133729\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"educational-num\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2,\n        \"min\": 1,\n        \"max\": 16,\n        \"num_unique_values\": 15,\n        \"samples\": [\n          16,\n          5,\n          7\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"marital-status\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 0,\n        \"max\": 6,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          4,\n          2,\n          3\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"occupation\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4,\n        \"min\": 0,\n        \"max\": 14,\n        \"num_unique_values\": 15,\n        \"samples\": [\n          13,\n          14,\n          7\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"relationship\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 6,\n        \"samples\": [\n          \"Own-child\",\n          \"Husband\",\n          \"Other-relative\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"race\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 4,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          4,\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"gender\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"capital-gain\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 7471,\n        \"min\": 0,\n        \"max\": 99999,\n        \"num_unique_values\": 123,\n        \"samples\": [\n          4064,\n          4787\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"capital-loss\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 402,\n        \"min\": 0,\n        \"max\": 4356,\n        \"num_unique_values\": 99,\n        \"samples\": [\n          2246,\n          2002\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"hours-per-week\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 12,\n        \"min\": 1,\n        \"max\": 99,\n        \"num_unique_values\": 96,\n        \"samples\": [\n          9,\n          11\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"native-country\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 7,\n        \"min\": 0,\n        \"max\": 41,\n        \"num_unique_values\": 42,\n        \"samples\": [\n          3,\n          35\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":57}]},{"cell_type":"code","source":["x=data.drop(columns=['income'])\n","y=data['income']\n","y"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":458},"id":"VYiaQUBLsopU","executionInfo":{"status":"ok","timestamp":1752820486236,"user_tz":-330,"elapsed":37,"user":{"displayName":"KOUSHIK Das","userId":"09056902619545898823"}},"outputId":"787134f3-8a6f-4847-b89c-af7b2f4b4457"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0        <=50K\n","1        <=50K\n","2         >50K\n","3         >50K\n","4        <=50K\n","         ...  \n","48837    <=50K\n","48838     >50K\n","48839    <=50K\n","48840    <=50K\n","48841     >50K\n","Name: income, Length: 47971, dtype: object"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>income</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>&lt;=50K</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>&lt;=50K</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>&gt;50K</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>&gt;50K</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>&lt;=50K</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>48837</th>\n","      <td>&lt;=50K</td>\n","    </tr>\n","    <tr>\n","      <th>48838</th>\n","      <td>&gt;50K</td>\n","    </tr>\n","    <tr>\n","      <th>48839</th>\n","      <td>&lt;=50K</td>\n","    </tr>\n","    <tr>\n","      <th>48840</th>\n","      <td>&lt;=50K</td>\n","    </tr>\n","    <tr>\n","      <th>48841</th>\n","      <td>&gt;50K</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>47971 rows × 1 columns</p>\n","</div><br><label><b>dtype:</b> object</label>"]},"metadata":{},"execution_count":58}]},{"cell_type":"code","source":["from sklearn.preprocessing import MinMaxScaler, LabelEncoder\n","\n","scaler = MinMaxScaler()\n","x = data.drop(columns=['income'])\n","\n","# Apply LabelEncoder to categorical columns in x\n","for col in x.columns:\n","    if x[col].dtype == 'object':\n","        encoder = LabelEncoder()\n","        x[col] = encoder.fit_transform(x[col])\n","\n","x = scaler.fit_transform(x)\n","x"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"PGF_XBnhAnUo","executionInfo":{"status":"ok","timestamp":1752820486237,"user_tz":-330,"elapsed":28,"user":{"displayName":"KOUSHIK Das","userId":"09056902619545898823"}},"outputId":"7f2556f6-1f08-442d-a7dd-279ef9f24057"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[0.13793103, 0.5       , 0.14512876, ..., 0.        , 0.39795918,\n","        0.95121951],\n","       [0.36206897, 0.5       , 0.05245126, ..., 0.        , 0.5       ,\n","        0.95121951],\n","       [0.18965517, 0.25      , 0.21964867, ..., 0.        , 0.39795918,\n","        0.95121951],\n","       ...,\n","       [0.70689655, 0.5       , 0.09446153, ..., 0.        , 0.39795918,\n","        0.95121951],\n","       [0.0862069 , 0.5       , 0.12800425, ..., 0.        , 0.19387755,\n","        0.95121951],\n","       [0.60344828, 0.625     , 0.18648211, ..., 0.        , 0.39795918,\n","        0.95121951]])"]},"metadata":{},"execution_count":59}]},{"cell_type":"code","source":["from sklearn.model_selection import train_test_split\n","y=data['income']\n","xtrain, xtest, ytrain, ytest = train_test_split(x,y,test_size=0.2,random_state=23,stratify=y)\n","xtrain"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"5cWfDII5KbDd","executionInfo":{"status":"ok","timestamp":1752820486241,"user_tz":-330,"elapsed":21,"user":{"displayName":"KOUSHIK Das","userId":"09056902619545898823"}},"outputId":"6db7544d-101d-41be-a02e-37362a313008"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[0.32758621, 0.5       , 0.18508709, ..., 0.        , 0.31632653,\n","        0.95121951],\n","       [0.53448276, 0.75      , 0.17129384, ..., 0.        , 0.39795918,\n","        0.95121951],\n","       [0.4137931 , 0.5       , 0.01182384, ..., 0.        , 0.60204082,\n","        0.95121951],\n","       ...,\n","       [0.22413793, 0.5       , 0.0518417 , ..., 0.        , 0.39795918,\n","        0.95121951],\n","       [0.10344828, 0.5       , 0.1374115 , ..., 0.        , 0.39795918,\n","        0.95121951],\n","       [0.46551724, 0.5       , 0.11506885, ..., 0.        , 0.39795918,\n","        0.95121951]])"]},"metadata":{},"execution_count":60}]},{"cell_type":"code","source":["# machine learning algorithum\n","from sklearn.neighbors import KNeighborsClassifier\n","knn = KNeighborsClassifier()\n","knn.fit(xtrain,ytrain)\n","predict = knn.predict(xtest)\n","predict"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"1ZhcrE4THADm","executionInfo":{"status":"ok","timestamp":1752820487688,"user_tz":-330,"elapsed":1447,"user":{"displayName":"KOUSHIK Das","userId":"09056902619545898823"}},"outputId":"0becdce5-805d-4b6d-f9f2-f05c8185faf4"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array(['<=50K', '<=50K', '<=50K', ..., '<=50K', '<=50K', '>50K'],\n","      dtype=object)"]},"metadata":{},"execution_count":61}]},{"cell_type":"code","source":["from sklearn.metrics import accuracy_score\n","accuracy_score(ytest,predict)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"XNJ12zc7I1tz","executionInfo":{"status":"ok","timestamp":1752820487743,"user_tz":-330,"elapsed":53,"user":{"displayName":"KOUSHIK Das","userId":"09056902619545898823"}},"outputId":"f638402a-5538-48f6-bbe6-4d62743940ab"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.8250130276185513"]},"metadata":{},"execution_count":62}]},{"cell_type":"code","source":["from sklearn.neural_network import MLPClassifier\n","clf =MLPClassifier(solver='adam',hidden_layer_sizes=(5,2),random_state=2,max_iter=2000)\n","clf.fit(xtrain,ytrain)\n","predict2 = clf.predict(xtest)\n","predict2"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"wPXyLA9Xj0J4","executionInfo":{"status":"ok","timestamp":1752820500589,"user_tz":-330,"elapsed":12863,"user":{"displayName":"KOUSHIK Das","userId":"09056902619545898823"}},"outputId":"a4fed972-5380-4eee-e1b0-4d6f5bf36181"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array(['<=50K', '<=50K', '<=50K', ..., '<=50K', '<=50K', '>50K'],\n","      dtype='<U5')"]},"metadata":{},"execution_count":63}]},{"cell_type":"code","source":["from sklearn.metrics import accuracy_score\n","accuracy_score(ytest,predict2)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"O0hEKjOYlo0e","executionInfo":{"status":"ok","timestamp":1752820500640,"user_tz":-330,"elapsed":51,"user":{"displayName":"KOUSHIK Das","userId":"09056902619545898823"}},"outputId":"be96f402-8723-4cfc-ae04-bbdb66a7c019"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.8447107868681605"]},"metadata":{},"execution_count":64}]},{"cell_type":"code","source":["from sklearn.pipeline import Pipeline\n","from sklearn.model_selection import train_test_split\n","from sklearn.metrics import accuracy_score, classification_report\n","from sklearn.linear_model import LogisticRegression\n","from sklearn.ensemble import RandomForestClassifier, GradientBoostingClassifier\n","from sklearn.neighbors import KNeighborsClassifier\n","from sklearn.svm import SVC\n","from sklearn.preprocessing import StandardScaler, OneHotEncoder\n","\n","# Split the dataset\n","X_train, X_test, y_train, y_test = train_test_split(x, y, test_size=0.2, random_state=42)\n","\n","# Define models\n","models = {\n","    \"LogisticRegression\": LogisticRegression(),\n","    \"RandomForest\": RandomForestClassifier(),\n","    \"KNN\": KNeighborsClassifier(),\n","    \"SVM\": SVC(),\n","    \"GradientBoosting\": GradientBoostingClassifier()\n","}\n","\n","results = {}\n","\n","# Train and evaluate each model\n","for name, model in models.items():\n","    pipe = Pipeline([\n","        ('scaler', StandardScaler()),\n","        ('model', model)\n","    ])\n","\n","    pipe.fit(X_train, y_train)\n","    y_pred = pipe.predict(X_test)\n","    acc = accuracy_score(y_test, y_pred)\n","    results[name] = acc\n","\n","    print(f\"{name} Accuracy: {acc:.4f}\")\n","    print(classification_report(y_test, y_pred))\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"FjLSy__T0nJB","executionInfo":{"status":"ok","timestamp":1752820542201,"user_tz":-330,"elapsed":41560,"user":{"displayName":"KOUSHIK Das","userId":"09056902619545898823"}},"outputId":"97b92ced-71a3-41cb-f353-a630593a8090"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["LogisticRegression Accuracy: 0.8234\n","              precision    recall  f1-score   support\n","\n","       <=50K       0.84      0.94      0.89      7253\n","        >50K       0.72      0.45      0.56      2342\n","\n","    accuracy                           0.82      9595\n","   macro avg       0.78      0.70      0.72      9595\n","weighted avg       0.81      0.82      0.81      9595\n","\n","RandomForest Accuracy: 0.8569\n","              precision    recall  f1-score   support\n","\n","       <=50K       0.89      0.93      0.91      7253\n","        >50K       0.75      0.63      0.68      2342\n","\n","    accuracy                           0.86      9595\n","   macro avg       0.82      0.78      0.79      9595\n","weighted avg       0.85      0.86      0.85      9595\n","\n","KNN Accuracy: 0.8307\n","              precision    recall  f1-score   support\n","\n","       <=50K       0.87      0.91      0.89      7253\n","        >50K       0.68      0.59      0.63      2342\n","\n","    accuracy                           0.83      9595\n","   macro avg       0.77      0.75      0.76      9595\n","weighted avg       0.82      0.83      0.83      9595\n","\n","SVM Accuracy: 0.8497\n","              precision    recall  f1-score   support\n","\n","       <=50K       0.87      0.95      0.91      7253\n","        >50K       0.77      0.55      0.64      2342\n","\n","    accuracy                           0.85      9595\n","   macro avg       0.82      0.75      0.77      9595\n","weighted avg       0.84      0.85      0.84      9595\n","\n","GradientBoosting Accuracy: 0.8675\n","              precision    recall  f1-score   support\n","\n","       <=50K       0.88      0.95      0.92      7253\n","        >50K       0.81      0.60      0.69      2342\n","\n","    accuracy                           0.87      9595\n","   macro avg       0.84      0.78      0.80      9595\n","weighted avg       0.86      0.87      0.86      9595\n","\n"]}]},{"cell_type":"code","source":["import matplotlib.pyplot as plt\n","plt.bar(results.keys(),results.values(),color=\"skyblue\")\n","plt.ylabel ('accuracy score')\n","plt.title('model comparison')\n","plt.xticks(rotation=45)\n","plt.grid(True)\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":539},"id":"W0-w0-iVgxcm","executionInfo":{"status":"ok","timestamp":1752820542332,"user_tz":-330,"elapsed":134,"user":{"displayName":"KOUSHIK Das","userId":"09056902619545898823"}},"outputId":"ea740896-6b4e-45fa-e049-896516ac0050"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["from sklearn.linear_model import LogisticRegression\n","from sklearn.ensemble import RandomForestClassifier, GradientBoostingClassifier\n","from sklearn.neighbors import KNeighborsClassifier\n","from sklearn.svm import SVC\n","from sklearn.model_selection import train_test_split\n","from sklearn.metrics import accuracy_score\n","import joblib\n","from sklearn.preprocessing import MinMaxScaler, LabelEncoder\n","\n","# Define x and y\n","x = data.drop(columns=['income'])\n","y = data['income']\n","\n","# Apply LabelEncoder to categorical columns in x\n","for col in x.columns:\n","    if x[col].dtype == 'object':\n","        encoder = LabelEncoder()\n","        x[col] = encoder.fit_transform(x[col])\n","\n","# Scale x\n","scaler = MinMaxScaler()\n","x = scaler.fit_transform(x)\n","\n","\n","# Train-test split\n","X_train, X_test, y_train, y_test = train_test_split(x, y, test_size=0.2, random_state=42)\n","\n","# Define models\n","models = {\n","    \"LogisticRegression\": LogisticRegression(max_iter=1000),\n","    \"RandomForest\": RandomForestClassifier(),\n","    \"KNN\": KNeighborsClassifier(),\n","    \"SVM\": SVC(),\n","    \"GradientBoosting\": GradientBoostingClassifier()\n","}\n","\n","results = {}\n","\n","# Train and evaluate\n","for name, model in models.items():\n","    model.fit(X_train, y_train)\n","    preds = model.predict(X_test)\n","    acc = accuracy_score(y_test, preds)\n","    results[name] = acc\n","    print(f\"{name}: {acc:.4f}\")\n","\n","# Get best model\n","best_model_name = max(results, key=results.get)\n","best_model = models[best_model_name]\n","print(f\"\\nBest model: {best_model_name} with accuracy {results[best_model_name]:.4f}\")\n","\n","# Save the best model\n","joblib.dump(best_model, \"best_model.pkl\")\n","print(\"Saved best model as best_model.pkl\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"HQmULXJrzWH1","executionInfo":{"status":"ok","timestamp":1752825106180,"user_tz":-330,"elapsed":82353,"user":{"displayName":"KOUSHIK Das","userId":"09056902619545898823"}},"outputId":"2d4dfb0d-216a-48c5-fb52-1cf4b5cbf594"},"execution_count":2,"outputs":[{"output_type":"stream","name":"stdout","text":["LogisticRegression: 0.8279\n","RandomForest: 0.8638\n","KNN: 0.8299\n","SVM: 0.8524\n","GradientBoosting: 0.8736\n","\n","Best model: GradientBoosting with accuracy 0.8736\n","Saved best model as best_model.pkl\n"]}]},{"cell_type":"code","source":["%%writefile app.py\n","import streamlit as st\n","import pandas as pd\n","import joblib\n","\n","# Load the trained model\n","model = joblib.load(\"best_model.pkl\")\n","\n","st.set_page_config(page_title=\"Employee Salary Classification\", page_icon=\"💼\", layout=\"centered\")\n","\n","st.title(\"💼 KOUSHIK DAS Employee Salary Classification App\")\n","st.markdown(\"Predict whether an employee earns >50K or ≤50K based on input features.\")\n","\n","# Sidebar inputs (these must match your training feature columns)\n","st.sidebar.header(\"Input Employee Details\")\n","\n","# Replace these fields with your dataset's actual input columns\n","age = st.sidebar.slider(\"Age\", 18, 65, 30)\n","education = st.sidebar.selectbox(\"Education Level\", [\n","    \"Bachelors\", \"Masters\", \"PhD\", \"HS-grad\", \"Assoc\", \"Some-college\"\n","])\n","occupation = st.sidebar.selectbox(\"Job Role\", [\n","    \"Tech-support\", \"Craft-repair\", \"Other-service\", \"Sales\",\n","    \"Exec-managerial\", \"Prof-specialty\", \"Handlers-cleaners\", \"Machine-op-inspct\",\n","    \"Adm-clerical\", \"Farming-fishing\", \"Transport-moving\", \"Priv-house-serv\",\n","    \"Protective-serv\", \"Armed-Forces\"\n","])\n","hours_per_week = st.sidebar.slider(\"Hours per week\", 1, 80, 40)\n","experience = st.sidebar.slider(\"Years of Experience\", 0, 40, 5)\n","\n","# Build input DataFrame (must match preprocessing of your training data)\n","input_df = pd.DataFrame({\n","    'age': [age],\n","    'education': [education],\n","    'occupation': [occupation],\n","    'hours-per-week': [hours_per_week],\n","    'experience': [experience]\n","})\n","\n","st.write(\"### Input Data\")\n","st.write(input_df)\n","\n","# Predict button\n","if st.button(\"Predict Salary Class\"):\n","    prediction = model.predict(input_df)\n","    st.success(f\" Prediction: {prediction[0]}\")\n","\n","# Batch prediction\n","st.markdown(\"---\")\n","st.markdown(\"#### Batch Prediction\")\n","uploaded_file = st.file_uploader(\"Upload a CSV file for batch prediction\", type=\"csv\")\n","\n","if uploaded_file is not None:\n","    batch_data = pd.read_csv(uploaded_file)\n","    st.write(\"Uploaded data preview:\", batch_data.head())\n","    batch_preds = model.predict(batch_data)\n","    batch_data['PredictedClass'] = batch_preds\n","    st.write(\"Predictions:\")\n","    st.write(batch_data.head())\n","    csv = batch_data.to_csv(index=False).encode('utf-8')\n","    st.download_button(\"Download Predictions CSV\", csv, file_name='predicted_classes.csv', mime='text/csv')\n"],"metadata":{"id":"CqzV2qnk0WfY","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1752825113129,"user_tz":-330,"elapsed":214,"user":{"displayName":"KOUSHIK Das","userId":"09056902619545898823"}},"outputId":"9bca9c92-adcd-41af-e3cc-73c198a9cc8d"},"execution_count":3,"outputs":[{"output_type":"stream","name":"stdout","text":["Writing app.py\n"]}]},{"cell_type":"code","source":["! pip install streamlit pyngrok"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Xws6sgU77w_n","executionInfo":{"status":"ok","timestamp":1752825130755,"user_tz":-330,"elapsed":13641,"user":{"displayName":"KOUSHIK Das","userId":"09056902619545898823"}},"outputId":"7e3d8459-8454-4344-9974-52117a8f1f76"},"execution_count":4,"outputs":[{"output_type":"stream","name":"stdout","text":["Collecting streamlit\n","  Downloading streamlit-1.47.0-py3-none-any.whl.metadata (9.0 kB)\n","Collecting pyngrok\n","  Downloading pyngrok-7.2.12-py3-none-any.whl.metadata (9.4 kB)\n","Requirement already satisfied: altair<6,>=4.0 in /usr/local/lib/python3.11/dist-packages (from streamlit) (5.5.0)\n","Requirement already satisfied: blinker<2,>=1.5.0 in /usr/local/lib/python3.11/dist-packages (from streamlit) (1.9.0)\n","Requirement already satisfied: cachetools<7,>=4.0 in /usr/local/lib/python3.11/dist-packages (from streamlit) (5.5.2)\n","Requirement already satisfied: click<9,>=7.0 in /usr/local/lib/python3.11/dist-packages (from streamlit) (8.2.1)\n","Requirement already satisfied: numpy<3,>=1.23 in /usr/local/lib/python3.11/dist-packages (from streamlit) (2.0.2)\n","Requirement already satisfied: packaging<26,>=20 in /usr/local/lib/python3.11/dist-packages (from streamlit) (25.0)\n","Requirement already satisfied: pandas<3,>=1.4.0 in /usr/local/lib/python3.11/dist-packages (from streamlit) (2.2.2)\n","Requirement already satisfied: pillow<12,>=7.1.0 in /usr/local/lib/python3.11/dist-packages (from streamlit) (11.2.1)\n","Requirement already satisfied: protobuf<7,>=3.20 in /usr/local/lib/python3.11/dist-packages (from streamlit) (5.29.5)\n","Requirement already satisfied: pyarrow>=7.0 in /usr/local/lib/python3.11/dist-packages (from streamlit) (18.1.0)\n","Requirement already satisfied: requests<3,>=2.27 in /usr/local/lib/python3.11/dist-packages (from streamlit) (2.32.3)\n","Requirement already satisfied: tenacity<10,>=8.1.0 in /usr/local/lib/python3.11/dist-packages (from streamlit) (8.5.0)\n","Requirement already satisfied: toml<2,>=0.10.1 in /usr/local/lib/python3.11/dist-packages (from streamlit) (0.10.2)\n","Requirement already satisfied: typing-extensions<5,>=4.4.0 in /usr/local/lib/python3.11/dist-packages (from streamlit) (4.14.1)\n","Collecting watchdog<7,>=2.1.5 (from streamlit)\n","  Downloading watchdog-6.0.0-py3-none-manylinux2014_x86_64.whl.metadata (44 kB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m44.3/44.3 kB\u001b[0m \u001b[31m2.6 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hRequirement already satisfied: gitpython!=3.1.19,<4,>=3.0.7 in /usr/local/lib/python3.11/dist-packages (from streamlit) (3.1.44)\n","Collecting pydeck<1,>=0.8.0b4 (from streamlit)\n","  Downloading pydeck-0.9.1-py2.py3-none-any.whl.metadata (4.1 kB)\n","Requirement already satisfied: tornado!=6.5.0,<7,>=6.0.3 in /usr/local/lib/python3.11/dist-packages (from streamlit) (6.4.2)\n","Requirement already satisfied: PyYAML>=5.1 in /usr/local/lib/python3.11/dist-packages (from pyngrok) (6.0.2)\n","Requirement already satisfied: jinja2 in /usr/local/lib/python3.11/dist-packages (from altair<6,>=4.0->streamlit) (3.1.6)\n","Requirement already satisfied: jsonschema>=3.0 in /usr/local/lib/python3.11/dist-packages (from altair<6,>=4.0->streamlit) (4.24.0)\n","Requirement already satisfied: narwhals>=1.14.2 in /usr/local/lib/python3.11/dist-packages (from altair<6,>=4.0->streamlit) (1.47.0)\n","Requirement already satisfied: gitdb<5,>=4.0.1 in /usr/local/lib/python3.11/dist-packages (from gitpython!=3.1.19,<4,>=3.0.7->streamlit) (4.0.12)\n","Requirement already satisfied: python-dateutil>=2.8.2 in /usr/local/lib/python3.11/dist-packages (from pandas<3,>=1.4.0->streamlit) (2.9.0.post0)\n","Requirement already satisfied: pytz>=2020.1 in /usr/local/lib/python3.11/dist-packages (from pandas<3,>=1.4.0->streamlit) (2025.2)\n","Requirement already satisfied: tzdata>=2022.7 in /usr/local/lib/python3.11/dist-packages (from pandas<3,>=1.4.0->streamlit) (2025.2)\n","Requirement already satisfied: charset-normalizer<4,>=2 in /usr/local/lib/python3.11/dist-packages (from requests<3,>=2.27->streamlit) (3.4.2)\n","Requirement already satisfied: idna<4,>=2.5 in /usr/local/lib/python3.11/dist-packages (from requests<3,>=2.27->streamlit) (3.10)\n","Requirement already satisfied: urllib3<3,>=1.21.1 in /usr/local/lib/python3.11/dist-packages (from requests<3,>=2.27->streamlit) (2.4.0)\n","Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.11/dist-packages (from requests<3,>=2.27->streamlit) (2025.7.14)\n","Requirement already satisfied: smmap<6,>=3.0.1 in /usr/local/lib/python3.11/dist-packages (from gitdb<5,>=4.0.1->gitpython!=3.1.19,<4,>=3.0.7->streamlit) (5.0.2)\n","Requirement already satisfied: MarkupSafe>=2.0 in /usr/local/lib/python3.11/dist-packages (from jinja2->altair<6,>=4.0->streamlit) (3.0.2)\n","Requirement already satisfied: attrs>=22.2.0 in /usr/local/lib/python3.11/dist-packages (from jsonschema>=3.0->altair<6,>=4.0->streamlit) (25.3.0)\n","Requirement already satisfied: jsonschema-specifications>=2023.03.6 in /usr/local/lib/python3.11/dist-packages (from jsonschema>=3.0->altair<6,>=4.0->streamlit) (2025.4.1)\n","Requirement already satisfied: referencing>=0.28.4 in /usr/local/lib/python3.11/dist-packages (from jsonschema>=3.0->altair<6,>=4.0->streamlit) (0.36.2)\n","Requirement already satisfied: rpds-py>=0.7.1 in /usr/local/lib/python3.11/dist-packages (from jsonschema>=3.0->altair<6,>=4.0->streamlit) (0.26.0)\n","Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.11/dist-packages (from python-dateutil>=2.8.2->pandas<3,>=1.4.0->streamlit) (1.17.0)\n","Downloading streamlit-1.47.0-py3-none-any.whl (9.9 MB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m9.9/9.9 MB\u001b[0m \u001b[31m77.5 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hDownloading pyngrok-7.2.12-py3-none-any.whl (26 kB)\n","Downloading pydeck-0.9.1-py2.py3-none-any.whl (6.9 MB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m6.9/6.9 MB\u001b[0m \u001b[31m94.4 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hDownloading watchdog-6.0.0-py3-none-manylinux2014_x86_64.whl (79 kB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m79.1/79.1 kB\u001b[0m \u001b[31m6.2 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hInstalling collected packages: watchdog, pyngrok, pydeck, streamlit\n","Successfully installed pydeck-0.9.1 pyngrok-7.2.12 streamlit-1.47.0 watchdog-6.0.0\n"]}]},{"cell_type":"code","source":["! ngrok authtoken 300YGDy0PbZOguACUHKlV6bRcDz_2upk8e6W8WAuugbKRk8JN"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"BkeKFLlt-Fgr","executionInfo":{"status":"ok","timestamp":1752825132099,"user_tz":-330,"elapsed":1359,"user":{"displayName":"KOUSHIK Das","userId":"09056902619545898823"}},"outputId":"3660d4fc-1f42-4965-bd0d-da0facdfe3f5"},"execution_count":5,"outputs":[{"output_type":"stream","name":"stdout","text":["Authtoken saved to configuration file: /root/.config/ngrok/ngrok.yml\n"]}]},{"cell_type":"code","source":["import os\n","import threading\n","\n","def run_streamlit():\n","    os.system('streamlit run app.py --server.port 8501')\n","thread = threading.Thread(target=run_streamlit)\n","thread.start()"],"metadata":{"id":"SXCT23ngBluN","executionInfo":{"status":"ok","timestamp":1752825133307,"user_tz":-330,"elapsed":15,"user":{"displayName":"KOUSHIK Das","userId":"09056902619545898823"}}},"execution_count":6,"outputs":[]},{"cell_type":"code","source":["from pyngrok import ngrok\n","import time\n","import requests\n","\n","# Wait a bit longer to make sure Streamlit started\n","time.sleep(10)\n","\n","# Check if Streamlit is running\n","try:\n","    response = requests.get('http://localhost:8501')\n","    if response.status_code != 200:\n","        print(\"Streamlit server is not running. Please check the previous cell output.\")\n","    else:\n","        # Disconnect any existing ngrok tunnels\n","        # NOTE: This will only disconnect tunnels started *within this pyngrok instance*.\n","        # If you have tunnels running from other sessions or the ngrok agent directly,\n","        # you will need to close them from the ngrok dashboard: https://dashboard.ngrok.com/\n","        tunnels = ngrok.get_tunnels()\n","        for tunnel in tunnels:\n","            ngrok.disconnect(tunnel.public_url)\n","\n","        # Create a tunnel to the Streamlit port 8501\n","        public_url = ngrok.connect(8501)\n","        print(\"Your Streamlit app is live here:\", public_url)\n","except requests.exceptions.ConnectionError:\n","    print(\"Could not connect to Streamlit server. Please ensure it is running.\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"UuVs_qfzDf0k","executionInfo":{"status":"ok","timestamp":1752825146096,"user_tz":-330,"elapsed":10754,"user":{"displayName":"KOUSHIK Das","userId":"09056902619545898823"}},"outputId":"d69f2d7e-1daf-4218-e6bd-435d7675a5dd"},"execution_count":7,"outputs":[{"output_type":"stream","name":"stdout","text":["Your Streamlit app is live here: NgrokTunnel: \"https://7b7944c52fc6.ngrok-free.app\" -> \"http://localhost:8501\"\n"]}]},{"cell_type":"code","source":[],"metadata":{"id":"BXWbm7XrFDWX"},"execution_count":null,"outputs":[]}]}